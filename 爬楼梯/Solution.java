/**
 * leetcode 70. 爬楼梯
 * 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
 * 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
 * 注意：给定 n 是一个正整数。
 * 
 *
 * 示例 1:
 * 输入： 2
 * 输出： 2
 * 解释： 有两种方法可以爬到楼顶。
 * 1.  1 阶 + 1 阶
 * 2.  2 阶
 * 
 * 其实就是一个斐波那契数列，1，2，3，5...  可以用动态规划的方法解题
 */
class Solution {
    public int climbStairs(int n) {
        if (n <= 2) return n;
        int[] m = new int[n+1];
        m[1] = 1;
        m[2] = 2;
        for(int i = 3; i<=n; i++) {
            m[i] = m[i-1] + m[i-2];ß
        }
        return m[n];
    }
}
